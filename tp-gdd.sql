--=============================================================
--CREACION DEL ESQUEMA CON EL NOMBRE DEL GRUPO--
--=============================================================
USE [GD1C2014]
GO
	
--CREATE SCHEMA [JJRD] AUTHORIZATION [GD]
--GO

--PRINT 'SE CREO EL ESQUEMA CORRECTAMENTE'

--============================================================
-- ===========================================================
--============================================================
--                EMPEZAMOS A CREAR LAS TABLAS
-- =========================================================== 
-- ===========================================================
-- ===========================================================

CREATE PROCEDURE JJRD.CREAR_ROLES
AS
BEGIN

--============================================================
--TABLA ROLES
--============================================================

	CREATE TABLE JJRD.ROLES (
		ID_ROL INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
		ROL_NOMBRE VARCHAR(40) NOT NULL,
		ROL_ESTADO BIT NOT NULL
	)
	PRINT 'SE CREO TABLA ROLES CORRECTAMENTE'
	
	/*--Se inserta administrador, empresa y cliente--*/ 
	
	INSERT INTO JJRD.ROLES VALUES ('ADMINISTRADOR',1)	
	INSERT INTO JJRD.ROLES VALUES ('EMPRESA',1)	
	INSERT INTO JJRD.ROLES VALUES ('CLIENTE',1)	
	
	
END
GO


CREATE PROCEDURE JJRD.CREAR_USUARIOS
AS
BEGIN

--============================================================
--TABLA USUARIOS
--============================================================


	CREATE TABLE JJRD.USUARIOS (
		ID_USUARIO INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
		NOMBRE NVARCHAR(30) NOT NULL UNIQUE,
		CONTRASEÑA  NVARCHAR(30) NOT NULL,
		HABILITADO BIT NOT NULL,
		LOGIN_FALLIDOS NUMERIC (1,0) NOT NULL, 
		TIPO_DE_USUARIO CHAR NOT NULL,
		TELEFONO NUMERIC (18,0) , --VER: NOT NULL UNIQUE, SAQUE LOS CONSTRAINTS PORQUE LA TABLA MAESTRA NO TIENE ESTE DATO Y NO PUEDO INSERTAR NULL
		FECHA_NACIMIENTO DATETIME,
		NUMERO_VENTA INT,
		PUBLICACIONES_GRATIS NUMERIC(1,0),
		REPUTACION NUMERIC (1,0)
	);

	PRINT 'SE CREO TABLA USUARIOS CORRECTAMENTE'

--============================================================
--TABLA ROL_USUARIO
--============================================================
	CREATE TABLE JJRD.ROL_USUARIO(
		ID_ROL INT FOREIGN KEY REFERENCES JJRD.ROLES (ID_ROL),
		ID_USUARIO INT FOREIGN KEY REFERENCES JJRD.USUARIOS (ID_USUARIO)
	)

	PRINT 'SE CREO TABLA ROL_USUARIO CORRECTAMENTE'


--============================================================
--TABLA DOMICILIO
--============================================================
	CREATE TABLE JJRD.DOMICILIO(
		ID_DOMICILIO INT NOT NULL IDENTITY (1,1) PRIMARY KEY,
		ID_USUARIO INT NOT NULL FOREIGN KEY REFERENCES JJRD.USUARIOS(ID_USUARIO),
		CALLE NVARCHAR(255) NOT NULL,
		NUM_CALLE NUMERIC(18,0) NOT NULL,
		PISO NUMERIC(18,0),
		DEPARTAMENTO NVARCHAR(50),
		LOCALIDAD NVARCHAR(50),
		COD_POSTAL NVARCHAR(50)
	);
	
	
	
	PRINT 'SE CREO TABLA DOMICILIO CORRECTAMENTE'
	
END
GO



CREATE PROCEDURE JJRD.FUNCIONALIDADES
AS 
BEGIN

--============================================================
--TABLA FUNCIONALIDADES
--============================================================

	CREATE TABLE JJRD.FUNCIONALIDAD(
		ID_FUNCIONALIDAD INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
		DESCRIPCION VARCHAR(60) UNIQUE NOT NULL	
	)
	PRINT 'SE CREO TABLA FUNCIONALIDAD CORRECTAMENTE'
	
	
	/*--Se insertan funcionalidades disponibles--*/
	
	INSERT INTO JJRD.FUNCIONALIDAD VALUES ('LOGIN Y SEGURIDAD')
	INSERT INTO JJRD.FUNCIONALIDAD VALUES ('ABM ROL')
	INSERT INTO JJRD.FUNCIONALIDAD VALUES ('REGISTRO USUARIO')
	INSERT INTO JJRD.FUNCIONALIDAD VALUES ('ABM CLIENTE')
	INSERT INTO JJRD.FUNCIONALIDAD VALUES ('ABM EMPRESA')
	INSERT INTO JJRD.FUNCIONALIDAD VALUES ('ABM RUBRO')
	INSERT INTO JJRD.FUNCIONALIDAD VALUES ('ABM VISIBILIDAD')
	INSERT INTO JJRD.FUNCIONALIDAD VALUES ('GENERAR PUBLICACION')
	INSERT INTO JJRD.FUNCIONALIDAD VALUES ('EDITAR PUBLICACION')
	INSERT INTO JJRD.FUNCIONALIDAD VALUES ('GESTIONAR PREGUNTAS')
	INSERT INTO JJRD.FUNCIONALIDAD VALUES ('COMPRAR/OFERTAR')
	INSERT INTO JJRD.FUNCIONALIDAD VALUES ('HISTORIAL CLIENTE')
	INSERT INTO JJRD.FUNCIONALIDAD VALUES ('CALIFICAR AL VENDEDOR')
	INSERT INTO JJRD.FUNCIONALIDAD VALUES ('FACTURAR')
	INSERT INTO JJRD.FUNCIONALIDAD VALUES ('LISTADO ESTADISTICO')
	
	
--============================================================
--TABLA ROL_FUNCIONALIDAD
--============================================================

	CREATE TABLE JJRD.ROL_FUNCIONALIDAD(
		ID_ROL INT NOT NULL FOREIGN KEY REFERENCES JJRD.ROLES(ID_ROL),
		ID_FUNCIONALIDAD INT NOT NULL IDENTITY(1,1) FOREIGN KEY REFERENCES JJRD.FUNCIONALIDAD(ID_FUNCIONALIDAD)
	)
	
	PRINT 'SE CREO TABLA ROL_FUNCIONALIDAD CORRECTAMENTE'
END
GO


CREATE PROCEDURE JJRD.EMPRESAS
AS
BEGIN

--============================================================
--TABLA EMPRESA
--============================================================

	CREATE TABLE JJRD.EMPRESA(
		ID_EMPRESA INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
		ID_USUARIO INT FOREIGN KEY REFERENCES JJRD.USUARIOS(ID_USUARIO),
		CUIT NVARCHAR(50) UNIQUE NOT NULL,
		RAZON_SOCIAL NVARCHAR(255) UNIQUE NOT NULL,
		CIUDAD VARCHAR(60), --NOT NULL, SAQUE EL NOT NULL PORQUE EN LA TABLA MAESTRA NO EXISTE ESTE CAMPO Y NO PODIA MIGRAR
		NOMBRE_CONTACTO VARCHAR(255),
		EMAIL NVARCHAR(50) NOT NULL UNIQUE
	)
	
	PRINT 'SE CREO TABLA EMPRESA CORRECTAMENTE'	
	
END
GO

CREATE PROCEDURE JJRD.CLIENTES
AS
BEGIN

--============================================================
--TABLA CLIENTE
--============================================================

	CREATE TABLE JJRD.CLIENTE(
		ID_CLIENTE INT PRIMARY KEY IDENTITY(1,1),
		ID_USUARIO INT FOREIGN KEY REFERENCES JJRD.USUARIOS (ID_USUARIO),
		NOMBRE NVARCHAR(255) NOT NULL,
		APELLIDO NVARCHAR(255) NOT NULL,
		TIPO_DOC CHAR(3) NOT NULL,
		NUMERO_DOC NUMERIC(18,0) NOT NULL UNIQUE,
		EMAIL NVARCHAR(255) NOT NULL UNIQUE
	)
	
	PRINT 'SE CREO TABLA CLIENTE CORRECTAMENTE'
END
GO



CREATE PROCEDURE JJRD.VISIBILIDADES
AS
BEGIN

--============================================================
--TABLA VISIBILIDAD
--============================================================

	CREATE TABLE JJRD.VISIBILIDAD (
		COD_VISIBILIDAD NUMERIC(18,0) NOT NULL PRIMARY KEY,
		DESCRIPCION NVARCHAR(255) NOT NULL,
		PRECIO NUMERIC(18,2) NOT NULL,
		PORCENTAJE_VENTA NUMERIC(18,2) NOT NULL,
		FECHA_FINALIZACION NUMERIC(18,0)
	);
	
	PRINT 'SE CREO TABLA VISIBILIDAD CORRECTAMENTE'
	
END	
GO

CREATE PROCEDURE JJRD.PUBLICACIONES
AS
BEGIN

--============================================================
--TABLA PUBLICACIONES
--============================================================ 

	CREATE TABLE JJRD.PUBLICACION(
		COD_PUBLICACION NUMERIC(18,0) PRIMARY KEY, --CORREGIDO : IDENTITY(1,1), MAL, EL COD_PUBLICACION VIENE DADO POR LA TABLA MAESTRA
		ID_USUARIO INT FOREIGN KEY REFERENCES JJRD.USUARIOS (ID_USUARIO),
		COD_VISIBILIDAD NUMERIC(18,0) NOT NULL FOREIGN KEY REFERENCES JJRD.VISIBILIDAD (COD_VISIBILIDAD), 
		DESCRIPCION NVARCHAR(255) NOT NULL,
		STOCK NUMERIC(18,0) NOT NULL,
		FECHA_VENCIMIENTO DATETIME, -- CORREGIDO: NUMERIC (18,0), MAL, ES DATETIME
		FECHA_INICIO DATETIME,
		PRECIO NUMERIC(18,2) NOT NULL,
		ESTADO NVARCHAR(255) NOT NULL,
		TIPO NVARCHAR(255) NOT NULL,
		PREGUNTAS CHAR (2) NOT NULL --VER: PODRIAMOS HABER USADO BIT COMO EN EL CAMPO HABILITADO DE LA TABLA USUARIOS
		);
	PRINT 'SE CREO TABLA PUBLICACION CORRECTAMENTE'
	
	
	
END 
GO

CREATE PROCEDURE JJRD.RUBROS
AS
BEGIN

--============================================================
--TABLA RUBRO
--============================================================

	CREATE TABLE JJRD.RUBRO(
	COD_RUBRO INT IDENTITY(1,1) PRIMARY KEY,
	DESCRIPCION NVARCHAR(255) NOT NULL
	);
	
	PRINT 'SE CREO TABLA RUBRO CORRECTAMENTE'
	
--============================================================
--TABLA PUBLICACION_RUBRO
--============================================================		
	
	CREATE TABLE JJRD.PUBLICACION_RUBRO(
	COD_RUBRO INT FOREIGN KEY REFERENCES JJRD.RUBRO(COD_RUBRO),
	COD_PUBLICACION NUMERIC (18,0) IDENTITY(1,1) FOREIGN KEY REFERENCES JJRD.PUBLICACION(COD_PUBLICACION)
	);
	
	PRINT 'SE CREO TABLA PUBLICACION_RUBRO CORRECTAMENTE'
	
END
GO

CREATE PROCEDURE JJRD.OFERTASPUBLICACIONES
AS
BEGIN

--============================================================
--TABLA OFERTAS
--============================================================		

	CREATE TABLE JJRD.OFERTAS(
	ID_OFERTA INT IDENTITY(1,1) PRIMARY KEY,
	COD_PUBLICACION NUMERIC(18,0) FOREIGN KEY REFERENCES JJRD.PUBLICACION(COD_PUBLICACION),
	ID_CLIENTE INT FOREIGN KEY REFERENCES JJRD.CLIENTE (ID_CLIENTE),
	MONTO NUMERIC(18,2) NOT NULL,
	FECHA DATETIME NOT NULL
	)
	
	PRINT 'SE CREO TABLA OFERTAS CORRECTAMENTE'

END
GO

CREATE PROCEDURE JJRD.COMPRASYCALIFICACIONES
AS
BEGIN

--============================================================
--TABLA CALIFICACIONES
--============================================================		
	
	CREATE TABLE JJRD.CALIFICACIONES(
	COD_CALIFICACION NUMERIC(18,0) PRIMARY KEY, --SACAMOS IDENTITY, COD_CALIFICACION VIENE DADO X LA TABLA MAESTRA.
	--ID_COMPRA NUMERIC(18,0) FOREIGN KEY REFERENCES JJRD.COMPRAS(ID_COMPRA),
	--COD_PUBLICACION NUMERIC(18,0) FOREIGN KEY REFERENCES JJRD.PUBLICACION (COD_PUBLICACION),
	CANTIDAD_ESTRELLAS NUMERIC (18,0) NOT NULL,
	DESCRIPCION NVARCHAR(255) NOT NULL
	); 
	
	PRINT 'SE CREO TABLA CALIFICACIONES CORRECTAMENTE'
	
--============================================================
--TABLA COMPRAS
--============================================================

	CREATE TABLE JJRD.COMPRAS(
	ID_COMPRA NUMERIC(18,0) IDENTITY(1,1) PRIMARY KEY,
	COD_PUBLICACION NUMERIC(18,0) FOREIGN KEY REFERENCES JJRD.PUBLICACION(COD_PUBLICACION),
	ID_CLIENTE INT FOREIGN KEY REFERENCES JJRD.CLIENTE(ID_CLIENTE),
	COD_CALIFICACION NUMERIC (18,0) FOREIGN KEY REFERENCES JJRD.CALIFICACIONES (COD_CALIFICACION), --AGREGO FK A CALIFICACIONES
	FECHA DATETIME NOT NULL,
	CANTIDAD NUMERIC(18,2) NOT NULL,
	--COMPRA_CALIFICADA CHAR (2) NOT NULL       SI EXISTE CAMPO FK A CALIFICACIONES (COD_CALIFICACION ) ENTONCES LA COMPRA ESTA CALIFICADA.
	);
	
	PRINT 'SE CREO TABLA COMPRAS CORRECTAMENTE'

	
END
GO

CREATE PROCEDURE JJRD.PREGUNTASPUBLICACION
AS
BEGIN

--============================================================
--TABLA PREGUNTAS
--============================================================		

	CREATE TABLE JJRD.PREGUNTAS(
	COD_PREGUNTA BIGINT IDENTITY(1,1) PRIMARY KEY,
	COD_PUBLICACION NUMERIC(18,0)  FOREIGN KEY REFERENCES JJRD.PUBLICACION (COD_PUBLICACION),
	ID_CLIENTE INT FOREIGN KEY REFERENCES JJRD.CLIENTE (ID_CLIENTE),
	PREGUNTA_DESCRIPCION VARCHAR(80),
	RESPUESTA_FECHA DATETIME NOT NULL,
	RESPUESTA_DESCRIPCION VARCHAR(80)
	);
	
	PRINT 'SE CREO TABLA PREGUNTAS CORRECTAMENTE'
END
GO

CREATE PROCEDURE JJRD.FACTURACION
AS
BEGIN
--============================================================
--TABLA FACTURAS
--============================================================	

	CREATE TABLE JJRD.FACTURAS(
	ID_FACTURA NUMERIC(18,0) PRIMARY KEY,--SACAMOS IDENTITY, ID_FACTURA VIENE DADO POR NUM_FACTURA DE TABLA MAESTRA
	ID_COMPRA NUMERIC(18,0) FOREIGN KEY REFERENCES JJRD.COMPRAS(ID_COMPRA),
	FORMA_DE_PAGO NVARCHAR(255),
	TOTAL NUMERIC (18,2),
	FECHA DATETIME
	
	);

	PRINT 'SE CREO TABLA FACTURAS CORRECTAMENTE'	
END
GO


exec JJRD.CREAR_ROLES
exec JJRD.CREAR_USUARIOS
exec JJRD.CLIENTES
exec JJRD.EMPRESAS
exec JJRD.FUNCIONALIDADES
exec JJRD.VISIBILIDADES
exec JJRD.PUBLICACIONES
exec JJRD.RUBROS
exec JJRD.COMPRASYCALIFICACIONES
exec JJRD.FACTURACION
exec JJRD.OFERTASPUBLICACIONES
exec JJRD.PREGUNTASPUBLICACION

END
GO

CREATE PROCEDURE JJRD.PASSWD_RANDOM
AS
BEGIN

--SELECT SUBSTRING(CONVERT(varchar(255), NEWID()), 0, 9)

declare @alphabet varchar(62) = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz'
select 
substring(@alphabet, convert(int, rand()*62), 1) + 
substring(@alphabet, convert(int, rand()*62), 1) +
substring(@alphabet, convert(int, rand()*62), 1) +
substring(@alphabet, convert(int, rand()*62), 1) +
substring(@alphabet, convert(int, rand()*62), 1) +
substring(@alphabet, convert(int, rand()*62), 1) +
substring(@alphabet, convert(int, rand()*62), 1);

END
GO

CREATE PROCEDURE JJRD.USR_RANDOM
AS
BEGIN

declare @alphabet varchar(52) = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'
select 
substring(@alphabet, convert(int, rand()*52), 1) + 
substring(@alphabet, convert(int, rand()*52), 1) +
substring(@alphabet, convert(int, rand()*52), 1) +
substring(@alphabet, convert(int, rand()*52), 1) +
substring(@alphabet, convert(int, rand()*52), 1) +
substring(@alphabet, convert(int, rand()*52), 1) +
substring(@alphabet, convert(int, rand()*52), 1);

END
GO

/* MIGRACION TABLA USUARIOS (TIPO CLIENTE) */  --PUBLICACIONES_GRATIS (NO ES APLICABLE PARA DATOS MIGRADOS)
insert into JJRD.USUARIOS (NOMBRE, CONTRASEÑA, HABILITADO, LOGIN_FALLIDOS, TIPO_DE_USUARIO, TELEFONO, FECHA_NACIMIENTO)
	select distinct Cli_Mail, Cli_Nombre, 1 as HABILITADO, 0 as LOGIN_FALLIDOS, 'C' as TIPO_DE_USUARIO, -1 as TELEFONO, Cli_Fecha_Nac
	from gd_esquema.Maestra
	where Cli_Mail is not null


GO 


/* MIGRACION TABLA CLIENTES */
INSERT INTO JJRD.CLIENTE (ID_USUARIO, NOMBRE, APELLIDO, TIPO_DOC, NUMERO_DOC, EMAIL)
	SELECT DISTINCT U.ID_USUARIO, Cli_Nombre, Cli_Apeliido, 'DNI' as TIPO_DOC, Cli_Dni, Cli_Mail
	FROM gd_esquema.Maestra as M
		join JJRD.USUARIOS as U
		on U.NOMBRE = M.Cli_Mail
	WHERE Cli_Dni is not null
GO




/* MIGRACION TABLA USUARIOS (TIPO EMPRESA) */  --PUBLICACIONES_GRATIS (NO ES APLICABLE PARA DATOS MIGRADOS)
insert into JJRD.USUARIOS (NOMBRE, CONTRASEÑA, HABILITADO, LOGIN_FALLIDOS, TIPO_DE_USUARIO, TELEFONO, FECHA_NACIMIENTO)
	select distinct Publ_Empresa_Razon_Social, Publ_Empresa_Cuit , 1 as HABILITADO, 0 as LOGIN_FALLIDOS, 'E' as TIPO_DE_USUARIO, -1 as TELEFONO, Publ_Empresa_Fecha_Creacion
	from gd_esquema.Maestra
	where Publ_Empresa_Razon_Social is not null
				
GO


/* MIGRACION TABLA EMPRESA */
INSERT INTO JJRD.EMPRESA (ID_USUARIO, CUIT, RAZON_SOCIAL, EMAIL)
	SELECT DISTINCT U.ID_USUARIO, Publ_Empresa_Cuit, Publ_Empresa_Razon_Social, Publ_Empresa_Mail
	FROM gd_esquema.Maestra as M
		join JJRD.USUARIOS as U
		on U.NOMBRE = M.Publ_Empresa_Razon_Social
	WHERE Publ_Empresa_Razon_Social is not null
GO

INSERT INTO JJRD.VISIBILIDAD (COD_VISIBILIDAD, DESCRIPCION, PRECIO, PORCENTAJE_VENTA, FECHA_FINALIZACION)

	SELECT DISTINCT PUBLICACION_VISIBILIDAD_COD, PUBLICACION_VISIBILIDAD_DESC, PUBLICACION_VISIBILIDAD_PRECIO, PUBLICACION_VISIBILIDAD_PORCENTAJE, -1 AS FECHA_FINALIZACION
		
		FROM gd_esquema.Maestra AS M 


GO



/* MIGRACION TABLA PUBLICACIONES */
--Publicaciones hechas por empresas
insert into JJRD.PUBLICACION (COD_PUBLICACION, U.ID_USUARIO, COD_VISIBILIDAD, DESCRIPCION, STOCK, FECHA_VENCIMIENTO,
								FECHA_INICIO, PRECIO, ESTADO, TIPO, PREGUNTAS)
	select distinct Publicacion_Cod , U.ID_USUARIO, V.COD_VISIBILIDAD, Publicacion_Descripcion, Publicacion_Stock, 
					Publicacion_Fecha_Venc, Publicacion_Fecha, Publicacion_Precio, Publicacion_Estado, Publicacion_Tipo, 'SI' as PREGUNTAS
	from gd_esquema.Maestra as M
		join JJRD.USUARIOS as U on U.NOMBRE = M.Publ_Empresa_Razon_Social
		join jjrd.VISIBILIDAD as V on V.COD_VISIBILIDAD = M.Publicacion_Visibilidad_Cod
	where M.Publ_Empresa_Razon_Social is not null
	

GO	

--Publicaciones hechas por clientes.
insert into JJRD.PUBLICACION (COD_PUBLICACION, U.ID_USUARIO, COD_VISIBILIDAD, DESCRIPCION, STOCK, FECHA_VENCIMIENTO,
								FECHA_INICIO, PRECIO, ESTADO, TIPO, PREGUNTAS)
	select distinct Publicacion_Cod , U.ID_USUARIO, V.COD_VISIBILIDAD, Publicacion_Descripcion, Publicacion_Stock, 
					Publicacion_Fecha_Venc, Publicacion_Fecha, Publicacion_Precio, Publicacion_Estado, Publicacion_Tipo, 'SI' as PREGUNTAS
	from gd_esquema.Maestra as M
		join JJRD.USUARIOS as U on U.NOMBRE = M.Publ_Cli_Mail
		join jjrd.VISIBILIDAD as V on V.COD_VISIBILIDAD = M.Publicacion_Visibilidad_Cod
	where M.Publ_Cli_Dni is not null 
	
GO






/*--MIGRACION TABLA RUBRO---------->NO ES NECESARIA SON TODOS NULL*/

--INSERT INTO JJRD.RUBRO (DESCRIPCION)
--SELECT DISTINCT  (Publicacion_Rubro_Descripcion)
--from gd_esquema.Maestra
--where Publicacion_Rubro_Descripcion is not null

/* MIGRACION TABLA PUBLICACION_RUBRO */
---
---


GO


/*-- MIGRACION TABLA DOMICILIO---CLIENTE----*/
-- CORREGIDO: LOCALIDAD ESTABA SETEADO COMO INT, Y DESPUES LO VAMOS A USAR COMO STRING. BORRE CONDICIONES QUE ESTABAN DE SOBRA
INSERT INTO JJRD.DOMICILIO (ID_USUARIO, CALLE, NUM_CALLE, PISO, DEPARTAMENTO, LOCALIDAD, COD_POSTAL)
	
	
SELECT DISTINCT U.ID_USUARIO, Cli_Dom_Calle, Cli_Nro_Calle, Cli_Piso, Cli_Depto, 's/d' as LOCALIDAD, Cli_Cod_postal
	
	FROM  JJRD.USUARIOS AS U, gd_esquema.Maestra AS M
	
	WHERE U.NOMBRE = M.Cli_Mail 


GO



/*---MIGRAMOS TABLA DOMICILIO-------EMPRESAS-----*/
-- CORREGIDO: LOCALIDAD ESTABA SETEADO COMO INT, Y DESPUES LO VAMOS A USAR COMO STRING. BORRE CONDICIONES QUE ESTABAN DE SOBRA
INSERT INTO JJRD.DOMICILIO (ID_USUARIO, CALLE, NUM_CALLE, PISO, DEPARTAMENTO, LOCALIDAD, COD_POSTAL)

	SELECT DISTINCT U.ID_USUARIO, PUBL_EMPRESA_DOM_CALLE, PUBL_EMPRESA_NRO_CALLE,PUBL_EMPRESA_PISO, PUBL_EMPRESA_DEPTO, 's/d' AS LOCALIDAD, PUBL_EMPRESA_COD_POSTAL 

	FROM JJRD.USUARIOS AS U, gd_esquema.Maestra AS M
	
	WHERE U.NOMBRE = M.Publ_Empresa_RAZON_SOCIAL



GO

/*---MIGRACION TABLA OFERTAS-----*/ --REHICE HABIA ALGUNAS COSAS MAL.
insert into JJRD.OFERTAS (P.COD_PUBLICACION, ID_CLIENTE, MONTO, FECHA)

	select distinct Publicacion_Cod, C.ID_CLIENTE , Oferta_Monto, Oferta_Fecha
	from gd_esquema.Maestra as M
		join JJRD.PUBLICACION as P on M.Publicacion_Cod = P.COD_PUBLICACION
		join JJRD.CLIENTE as C on M.Cli_Mail = C.EMAIL
	where Oferta_Fecha is not null

GO

/* MIGRACION TABLA CALIFICACIONES */

insert into JJRD.CALIFICACIONES (COD_CALIFICACION, CANTIDAD_ESTRELLAS, DESCRIPCION)
	select distinct M.Calificacion_Codigo, M.Calificacion_Cant_Estrellas, M.Calificacion_Descripcion
	from gd_esquema.Maestra as M
	where Calificacion_Codigo is not null



/*---MIGRACION TABLA COMPRAS -----*/--ARREGLADO

insert into JJRD.COMPRAS (COD_PUBLICACION, ID_CLIENTE, FECHA, CANTIDAD, COD_CALIFICACION)

	select distinct Publicacion_Cod, C.ID_CLIENTE, Compra_Fecha, Compra_Cantidad, M.Calificacion_Codigo
	from gd_esquema.Maestra as M
		join JJRD.PUBLICACION as P on M.Publicacion_Cod = P.COD_PUBLICACION
		join JJRD.CLIENTE as C on M.Cli_Mail = C.EMAIL
	where Compra_Fecha is not null


--HASTA ACA TODO MIGRADO.	
GO



---MIGRACION TABLA FACTURAS------------->NO ANDA TIRA ERROR DE PK
 




--INSERT INTO JJRD.FACTURAS (ID_FACTURA, ID_COMPRA, FORMA_DE_PAGO, TOTAL, FECHA)

--	SELECT DISTINCT Factura_Nro, CO.ID_COMPRA, Forma_Pago_Desc, Factura_Total, Factura_Fecha

--	FROM gd_esquema.Maestra AS M, JJRD.COMPRAS AS CO
	
--	WHERE CO.COD_PUBLICACION = M.Publicacion_Cod AND M.Factura_Nro IS NOT NULL
	

--ver objetos creados: select name from sysobjects


create procedure JJRD.BORRAR_TODO --BORRA TODO DENTRO DEL ESQUEMA JJRD
as
begin
DECLARE @spSQL AS NVARCHAR(MAX)
DECLARE @fnSQL AS NVARCHAR(MAX)
DECLARE @vwSQL AS NVARCHAR(MAX)
DECLARE @fkSQL AS NVARCHAR(MAX)
DECLARE @tblSQL AS NVARCHAR(MAX)

SET @spSQL = ''
SET @fnSQL = ''
SET @vwSQL = ''
SET @fkSQL = ''
SET @tblSQL = ''

-- Procedimientos almacenados
SELECT @spSQL = @spSQL + 'DROP PROCEDURE JJRD.' + QUOTENAME(name)
FROM sys.procedures
WHERE is_ms_shipped = 0
AND name NOT LIKE 'sp\_%' ESCAPE '\'

-- Funciones
SELECT @fnSQL = @fnSQL + 'DROP FUNCTION JJRD.' + QUOTENAME(name)
FROM sys.objects
WHERE is_ms_shipped = 0
AND name NOT LIKE 'fn\_%' ESCAPE '\'
AND type = 'FN'

-- Vistas
SELECT @vwSQL = @vwSQL + 'DROP VIEW JJRD.' + QUOTENAME(name)
FROM sys.views
WHERE is_ms_shipped = 0

-- Claves foráneas
SELECT @fkSQL = @fkSQL + 'ALTER TABLE JJRD.' + QUOTENAME(OBJECT_NAME(parent_object_id)) + ' DROP CONSTRAINT ' + QUOTENAME(name)
FROM sys.foreign_keys
WHERE is_ms_shipped = 0

-- Tablas
SELECT @tblSQL = @tblSQL + 'DROP TABLE JJRD.' + QUOTENAME(name)
FROM sys.tables
WHERE is_ms_shipped = 0
AND name NOT LIKE 'sys%'

EXEC (@spSQL)
EXEC (@fnSQL)
EXEC (@vwSQL)
EXEC (@fkSQL)
EXEC (@tblSQL)

-- + QUOTENAME(SCHEMA_NAME(schema_id)) + '.' + QUOTENAME(name), PARA BORRAR TODOS LOS ESQUEMAS

end
GO

